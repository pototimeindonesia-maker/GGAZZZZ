# .github/workflows/android.yml
name: Build Android WebView APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (needed by sdkmanager)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android packages
        run: |
          sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # === Fix inti: unzip kalau repo berisi .zip, lalu deteksi folder project Android ===
      - name: Prepare project (unzip if repo contains a zip) & detect project dir
        shell: bash
        run: |
          set -e
          echo "List root repo:"
          ls -la

          # Kalau ada zip di root repo, unzip dulu (ambil yang pertama saja)
          if ls *.zip >/dev/null 2>&1; then
            ZIPFILE="$(ls *.zip | head -n1)"
            echo "Found ZIP: $ZIPFILE -> unzip..."
            unzip -o "$ZIPFILE" -d .
          fi

          # Deteksi lokasi settings.gradle (root atau subfolder)
          if [ -f settings.gradle ] || [ -f settings.gradle.kts ]; then
            PROJECT_DIR="."
          else
            CANDIDATE="$(find . -maxdepth 2 -type f \( -name 'settings.gradle' -o -name 'settings.gradle.kts' \) | head -n1)"
            if [ -z "$CANDIDATE" ]; then
              echo "::error::Tidak menemukan settings.gradle. Pastikan project Android-nya diextract (bukan hanya ZIP)."
              exit 1
            fi
            PROJECT_DIR="$(dirname "$CANDIDATE")"
          fi

          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          echo "Detected PROJECT_DIR: $PROJECT_DIR"
          echo "Tree proyek:"
          ls -la "$PROJECT_DIR"

      - name: Build debug APK (Gradle 7.6.1)
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 7.6.1
          arguments: assembleDebug
          build-root-directory: ${{ env.PROJECT_DIR }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: POTOTIME-Android-Debug-APK
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/app-debug.apk
